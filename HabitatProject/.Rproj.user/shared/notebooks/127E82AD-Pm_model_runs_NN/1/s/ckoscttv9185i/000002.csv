"0","# set up weighting"
"0","yAcOnly <- transformedCovars_AcOnly.train$Density"
"0","yVisOnly <- transformedCovars_VisOnly.train$Density"
"0","y <- transformedCovars.train$Density"
"0",""
"0","visDetProb <- detFun[[bestModelIdx]]$fitted[1]"
"0",""
"0","transformedCovars_AcOnly.train$yAcOnly_TF <- (transformedCovars_AcOnly.train$Density >0)*1"
"0","transformedCovars_VisOnly.train$yVisOnly_TF <- (transformedCovars_VisOnly.train$Density>0)*1"
"0","transformedCovars.train$y_TF <- (transformedCovars.train$Density>0)*1"
"0",""
"0","transformedCovars_AcOnly.test$yAcOnly_TF <- (transformedCovars_AcOnly.test$Density >0)*1"
"0","transformedCovars_VisOnly.test$yVisOnly_TF <- (transformedCovars_VisOnly.test$Density>0)*1"
"0","transformedCovars.test$y_TF <- (transformedCovars.test$Density>0)*1"
"0",""
"0","# make some factors and calculate introduce column of g0 weights"
"0","joint_train_weightsG0<- array(data = 1, dim = c(length(transformedCovars.train$fac1),1))"
"0","joint_test_weightsG0<- array(data = 1, dim = c(length(transformedCovars.test$fac1),1))"
"0",""
"0",""
"0","for (iFac in 1:length(transformedCovars.train$fac1)) {"
"0","  if (!is.na(transformedCovars.train$fac1[iFac]) & !is.na(transformedCovars.train$Density[iFac])){"
"0","    if (transformedCovars.train$fac1[iFac]>5) {"
"0","      if (transformedCovars.train$Density[iFac]==0){"
"0","        # if it's visual data and it's a zero, adjust by g0 ie, only a X% chance it was a true zero."
"0","        joint_train_weightsG0[iFac,1] <- visG0*visDetProb"
"0","      }"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","maxEffectiveAreaJoint <- max(c(transformedCovars.train$EffectiveArea,"
"0","                               transformedCovars.test$EffectiveArea))"
"0",""
"0","# do additional adjustment for effective area"
"0","joint_train_weightsG0 <- joint_train_weightsG0*"
"0","                  (transformedCovars.train$EffectiveArea/maxEffectiveAreaJoint)"
"0",""
"0","for (iFac in 1:length(transformedCovars.test$fac1)) {"
"0","  if (!is.na(transformedCovars.test$fac1[iFac]) & !is.na(transformedCovars.test$Density[iFac])){"
"0","    if (transformedCovars.test$fac1[iFac]>5) {"
"0","       if (transformedCovars.test$Density[iFac]==0){"
"0","        # if it's visual data and it's a zero, adjust by g0 ie, only a X% chance it was a true zero."
"0","        joint_test_weightsG0[iFac,1] <- visG0*visDetProb"
"0","      }"
"0","    }"
"0","  }"
"0","}"
"0","# do additional adjustment for effective area"
"0","joint_test_weightsG0 <- joint_test_weightsG0*"
"0","                  (transformedCovars.test$EffectiveArea/maxEffectiveAreaJoint)"
"0",""
"0",""
"0","VisOnly.train_weightsG0<- array(data = 1, dim = c(length(transformedCovars_VisOnly.train$fac1),1))"
"0","VisOnly.test_weightsG0<- array(data = 1, dim = c(length(transformedCovars_VisOnly.test$fac1),1))"
"0",""
"0","for (iFac in 1:length(transformedCovars_VisOnly.train$fac1)) {"
"0","  if (!is.na(transformedCovars_VisOnly.train$Density[iFac]) & "
"0","       transformedCovars_VisOnly.train$Density[iFac]==0){"
"0","    # if it's visual data and it's a zero, adjust by g0 ie, only a X% chance it was a true zero."
"0","    VisOnly.train_weightsG0[iFac,1] <- visG0*visDetProb"
"0","  }"
"0","}"
"0",""
"0","maxEffectiveAreaVis <- max(c(transformedCovars_VisOnly.train$EffectiveArea,"
"0","                               transformedCovars_VisOnly.test$EffectiveArea))"
"0","# do additional adjustment for effective area"
"0","VisOnly.train_weightsG0 <- VisOnly.train_weightsG0*"
"0","                  (transformedCovars_VisOnly.train$EffectiveArea/maxEffectiveAreaVis)"
"0",""
"0","for (iFac in 1:length(transformedCovars_VisOnly.test$fac1)) {"
"0","  if (!is.na(transformedCovars_VisOnly.test$Density[iFac]) & "
"0","      transformedCovars_VisOnly.test$Density[iFac]==0){"
"0","    # if it's visual data and it's a zero, adjust by g0 ie, only a X% chance it was a true zero."
"0","    VisOnly.test_weightsG0[iFac,1] <- visG0*visDetProb"
"0","  }"
"0","}"
"0",""
"0","# do additional adjustment for effective area"
"0","VisOnly.test_weightsG0 <- VisOnly.test_weightsG0*"
"0","                  (transformedCovars_VisOnly.test$EffectiveArea/maxEffectiveAreaVis)"
"0",""
"0","# Remove NaNs"
"0","goodData_Ac <- which(!is.na(rowSums(transformedCovars_AcOnly.train)))"
"0","AcOnly.train.NoNa <- transformedCovars_AcOnly.train[goodData_Ac,]"
"0",""
"0","goodData_Vis <- which(!is.na(rowSums(transformedCovars_VisOnly.train)))"
"0","VisOnly.train.NoNa <- transformedCovars_VisOnly.train[goodData_Vis,]"
"0",""
"0","goodData_Joint <- which(!is.na(rowSums(transformedCovars.train)))"
"0","Joint.train.NoNa <- transformedCovars.train[goodData_Joint,]"
"0",""
"0",""
"0","goodData_Ac_test <- which(!is.na(rowSums(transformedCovars_AcOnly.test)))"
"0","AcOnly.test.NoNa <- transformedCovars_AcOnly.test[goodData_Ac_test,]"
"0",""
"0","goodData_Vis_test <- which(!is.na(rowSums(transformedCovars_VisOnly.test)))"
"0","VisOnly.test.NoNa <- transformedCovars_VisOnly.test[goodData_Vis_test,]"
"0",""
"0","goodData_Joint_test <- which(!is.na(rowSums(transformedCovars.test)))"
"0","Joint.test.NoNa <- transformedCovars.test[goodData_Joint_test,]"
"0",""
